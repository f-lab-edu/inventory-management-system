openapi: 3.0.3
info:
  title: Warehouse API
  description: 창고 관련 API
  version: 1.0.0
  contact:
    name: 김수용
    email: hwasuyong99@naver.com

servers:
  - url: http://localhost:10001
    description: 로컬 개발 서버

paths:
  /api/v1/warehouses:
    post:
      summary: 창고 생성
      description: 새로운 창고를 생성합니다.
      operationId: createWarehouse
      tags:
        - Warehouse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWarehouseRequest"
            examples:
              createWarehouseExample:
                summary: 창고 생성 예시
                value:
                  name: "서울 중앙 창고"
                  postcode: "12345"
                  baseAddress: "서울특별시 강남구 테헤란로 123"
                  detailAddress: "456동 789호"
                  managerName: "김관리"
                  managerContact: "01012345678"
      responses:
        "201":
          description: 창고가 성공적으로 생성되었습니다.
          headers:
            Location:
              description: 생성된 창고의 URI
              schema:
                type: string
                example: "/api/v1/warehouses/1"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_WarehouseResponse"
              examples:
                successExample:
                  summary: 성공 응답 예시
                  value:
                    status: "CREATED"
                    message: "성공하였습니다."
                    data:
                      id: 1
                      name: "서울 중앙 창고"
                      postcode: "12345"
                      baseAddress: "서울특별시 강남구 테헤란로 123"
                      detailAddress: "456동 789호"
                      managerName: "김관리"
                      managerContact: "01012345678"
        "400":
          description: 잘못된 요청 데이터
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_Error"
              examples:
                validationError:
                  summary: 유효성 검증 오류
                  value:
                    status: "BAD_REQUEST"
                    message: "입력 검증에 실패했습니다"
                    data: null
    get:
      summary: 창고 목록 조회
      description: 페이지네이션을 지원하는 창고 목록을 조회합니다.
      operationId: searchWarehouse
      tags:
        - Warehouse
      parameters:
        - name: currentPageNumber
          in: query
          description: 현재 페이지 번호 (0부터 시작)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
          example: 0
        - name: pageSize
          in: query
          description: 페이지당 항목 수
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          example: 10
      responses:
        "200":
          description: 창고 목록이 성공적으로 조회되었습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_PageResponse_WarehouseResponse"
              examples:
                successExample:
                  summary: 성공 응답 예시
                  value:
                    status: "OK"
                    message: "성공하였습니다."
                    data:
                      content:
                        - id: 1
                          name: "서울 중앙 창고"
                          postcode: "12345"
                          baseAddress: "서울특별시 강남구 테헤란로 123"
                          detailAddress: "456동 789호"
                          managerName: "김관리"
                          managerContact: "01012345678"
                        - id: 2
                          name: "부산 지점 창고"
                          postcode: "54321"
                          baseAddress: "부산광역시 해운대구 센텀로 456"
                          detailAddress: "789동 101호"
                          managerName: "이관리"
                          managerContact: "01098765432"
                      currentPageNumber: 0
                      pageSize: 10
                      totalElements: 2
                      totalPages: 1
                      hasNext: false
                      hasPrevious: false

  /api/v1/warehouses/{id}:
    get:
      summary: 창고 상세 조회
      description: 특정 ID의 창고 정보를 조회합니다.
      operationId: getWarehouse
      tags:
        - Warehouse
      parameters:
        - name: id
          in: path
          description: 창고 ID
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      responses:
        "200":
          description: 창고 정보가 성공적으로 조회되었습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_WarehouseResponse"
              examples:
                successExample:
                  summary: 성공 응답 예시
                  value:
                    status: "OK"
                    message: "성공하였습니다."
                    data:
                      id: 1
                      name: "서울 중앙 창고"
                      postcode: "12345"
                      baseAddress: "서울특별시 강남구 테헤란로 123"
                      detailAddress: "456동 789호"
                      managerName: "김관리"
                      managerContact: "01012345678"
        "404":
          description: 창고를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_Error"
              examples:
                notFoundError:
                  summary: 리소스 없음 오류
                  value:
                    status: "NOT_FOUND"
                    message: "요청한 리소스를 찾을 수 없습니다"
                    data: null
    put:
      summary: 창고 정보 수정
      description: 특정 ID의 창고 정보를 수정합니다.
      operationId: updateWarehouse
      tags:
        - Warehouse
      parameters:
        - name: id
          in: path
          description: 창고 ID
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWarehouseRequest"
            examples:
              updateWarehouseExample:
                summary: 창고 수정 예시
                value:
                  name: "서울 중앙 창고 (수정)"
                  managerContact: "010-9999-8888"
      responses:
        "200":
          description: 창고 정보가 성공적으로 수정되었습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_WarehouseResponse"
              examples:
                successExample:
                  summary: 성공 응답 예시
                  value:
                    status: "OK"
                    message: "성공하였습니다."
                    data:
                      id: 1
                      name: "서울 중앙 창고 (수정)"
                      postcode: "12345"
                      baseAddress: "서울특별시 강남구 테헤란로 123"
                      detailAddress: "456동 789호"
                      managerName: "김관리"
                      managerContact: "01099998888"
        "404":
          description: 창고를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_Error"
              examples:
                notFoundError:
                  summary: 리소스 없음 오류
                  value:
                    status: "NOT_FOUND"
                    message: "요청한 리소스를 찾을 수 없습니다"
                    data: null
    delete:
      summary: 창고 삭제
      description: 특정 ID의 창고를 삭제합니다.
      operationId: deleteWarehouse
      tags:
        - Warehouse
      parameters:
        - name: id
          in: path
          description: 창고 ID
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      responses:
        "204":
          description: 창고가 성공적으로 삭제되었습니다.
        "404":
          description: 창고를 찾을 수 없습니다.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse_Error"
              examples:
                notFoundError:
                  summary: 리소스 없음 오류
                  value:
                    status: "NOT_FOUND"
                    message: "요청한 리소스를 찾을 수 없습니다"
                    data: null

components:
  schemas:
    CreateWarehouseRequest:
      type: object
      required:
        - name
        - postcode
        - baseAddress
        - managerName
        - managerContact
      properties:
        name:
          type: string
          description: 창고명
          minLength: 1
          maxLength: 100
          example: "서울 중앙 창고"
        postcode:
          type: string
          description: 우편번호 (5자리 숫자)
          pattern: '^\d{5}$'
          example: "12345"
        baseAddress:
          type: string
          description: 기본주소
          maxLength: 200
          example: "서울특별시 강남구 테헤란로 123"
        detailAddress:
          type: string
          description: 상세주소 (선택사항)
          maxLength: 100
          example: "456동 789호"
        managerName:
          type: string
          description: 관리자명
          minLength: 1
          maxLength: 50
          example: "김관리"
        managerContact:
          type: string
          description: 관리자 연락처
          example: "01012345678"

    UpdateWarehouseRequest:
      type: object
      description: 모든 필드가 선택사항입니다. 전송하지 않은 필드는 기존 값이 유지됩니다.
      properties:
        name:
          type: string
          description: 창고명
          minLength: 1
          maxLength: 100
          example: "서울 중앙 창고 (수정)"
        postcode:
          type: string
          description: 우편번호 (5자리 숫자)
          pattern: '^\d{5}$'
          example: "12345"
        baseAddress:
          type: string
          description: 기본주소
          maxLength: 200
          example: "서울특별시 강남구 테헤란로 123"
        detailAddress:
          type: string
          description: 상세주소
          maxLength: 100
          example: "456동 789호"
        managerName:
          type: string
          description: 관리자명
          minLength: 1
          maxLength: 50
          example: "김관리"
        managerContact:
          type: string
          description: 관리자 연락처
          example: "01099998888"

    WarehouseResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 창고 ID
          example: 1
        name:
          type: string
          description: 창고명
          example: "서울 중앙 창고"
        postcode:
          type: string
          description: 우편번호
          example: "12345"
        baseAddress:
          type: string
          description: 기본주소
          example: "서울특별시 강남구 테헤란로 123"
        detailAddress:
          type: string
          description: 상세주소
          example: "456동 789호"
        managerName:
          type: string
          description: 관리자명
          example: "김관리"
        managerContact:
          type: string
          description: 관리자 연락처
          example: "01012345678"

    PageResponse:
      type: object
      properties:
        content:
          type: array
          description: 페이지 내용
          items:
            $ref: "#/components/schemas/WarehouseResponse"
        currentPageNumber:
          type: integer
          description: 현재 페이지 번호 (0부터 시작)
          example: 0
        pageSize:
          type: integer
          description: 페이지당 항목 수
          example: 10
        totalElements:
          type: integer
          format: int64
          description: 전체 항목 수
          example: 25
        totalPages:
          type: integer
          description: 전체 페이지 수
          example: 3
        hasNext:
          type: boolean
          description: 다음 페이지 존재 여부
          example: true
        hasPrevious:
          type: boolean
          description: 이전 페이지 존재 여부
          example: false

    ApiResponse:
      type: object
      properties:
        status:
          type: string
          description: HTTP 상태
          example: "OK"
        message:
          type: string
          description: 응답 메시지
          example: "성공하였습니다."
        data:
          description: 응답 데이터

    ApiResponse_WarehouseResponse:
      allOf:
        - $ref: "#/components/schemas/ApiResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/WarehouseResponse"

    ApiResponse_PageResponse_WarehouseResponse:
      allOf:
        - $ref: "#/components/schemas/ApiResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/PageResponse"

    ApiResponse_Error:
      allOf:
        - $ref: "#/components/schemas/ApiResponse"
        - type: object
          properties:
            status:
              type: string
              description: HTTP 상태 코드
              example: "BAD_REQUEST"
            message:
              type: string
              description: 에러 메시지
              example: "입력 검증에 실패했습니다"
            data:
              nullable: true
              description: 에러 시에는 항상 null
              example: null

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Warehouse
    description: 창고 관리 API
